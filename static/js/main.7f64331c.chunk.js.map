{"version":3,"sources":["sidebar/styles.js","sidebaritems/sidebarItems.js","helper.js","sidebar/sidebar.js","editor/styles.js","editor/editor.js","App.js","reportWebVitals.js","index.js"],"names":["styles","theme","root","backgroundColor","palette","background","paper","height","position","left","width","boxShadow","newChatBtn","borderRadius","unreadMessage","color","top","right","newNoteBtn","borderBottom","sidebarContainer","marginTop","boxSizing","float","overflowY","overflowX","cursor","newNoteInput","margin","outline","border","paddingLeft","newNoteSubmitBtn","SidebarItemComponent","selectNote","n","i","props","deleteNote","note","window","confirm","title","str","this","_index","_note","classes","selectedNoteIndex","ListItem","className","listItem","selected","alignItems","textSection","onClick","ListItemText","primary","secondary","body","substring","replace","deleteIcon","React","Component","withStyles","SidebarComponent","newNoteBtnClick","setState","addNote","state","updateTitle","txt","newNote","notes","Button","type","placeholder","onKeyUp","e","target","value","List","map","Divider","titleInput","padding","fontSize","editIcon","editorContainer","EditorComponent","componentDidMount","text","selectedNote","id","componentDidUpdate","updateBody","val","a","update","b","c","d","h","apply","f","g","arguments","clearTimeout","setTimeout","debounce","noteUpdate","onChange","require","App","firebase","firestore","collection","onSnapshot","serverUpdate","docs","_doc","data","console","log","index","noteObj","doc","timestamp","FieldValue","serverTimestamp","add","newFromDB","newID","newNoteIndex","indexOf","filter","noteIndex","length","delete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","firebaseConfig","apiKey","process","API_KEY","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f64331c.chunk.js","sourcesContent":["    const styles = theme => ({\r\n        root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        height: 'calc(100% - 35px)',\r\n        position: 'absolute',\r\n        left: '0',\r\n        width: '300px',\r\n        boxShadow: '0px 0px 2px black'\r\n        },\r\n        newChatBtn: {\r\n        borderRadius: '0px'\r\n        },\r\n        unreadMessage: {\r\n        color: 'red',\r\n        position: 'absolute',\r\n        top: '0',\r\n        right: '5px'\r\n        },\r\n        newNoteBtn: {\r\n        width: '100%',\r\n        height: '35px',\r\n        borderBottom: '1px solid black',\r\n        borderRadius: '0px',\r\n        backgroundColor: '#000',\r\n        color: 'white',\r\n        '&:hover': {\r\n            backgroundColor: 'green'\r\n        }\r\n        },\r\n        sidebarContainer: {\r\n        marginTop: '0px',\r\n        width: '300px',\r\n        height: '100%',\r\n        boxSizing: 'border-box',\r\n        float: 'left',\r\n        overflowY: 'scroll',\r\n        overflowX: 'hidden',\r\n        cursor: 'pointer'\r\n        },\r\n        newNoteInput: {\r\n        width: '100%',\r\n        margin: '0px',\r\n        height: '70px',\r\n        outline: 'none',\r\n        border: 'none',\r\n        paddingLeft: '5px',\r\n        '&:focus': {\r\n            outline: '2px solid rgba(81, 203, 238, 1)'\r\n        }\r\n        },\r\n        newNoteSubmitBtn: {\r\n        width: '100%',\r\n        backgroundColor: '#00A82D',\r\n        borderRadius: '0px',\r\n        color: 'black',\r\n        '&:hover': {\r\n            backgroundColor: 'lightgreen'\r\n        }\r\n        }\r\n    });\r\n    \r\n    export default styles;","import React from 'react';\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText  from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {removeHTMLTags} from '../helper';\r\nimport styles from './styles';\r\n\r\nclass SidebarItemComponent extends React.Component {\r\n    \r\n    render(){\r\n        const {_index, _note,classes,selectedNoteIndex}=this.props;\r\n\r\n        return (\r\n            <div key={_index}>\r\n                <ListItem \r\n                    className={classes.listItem}\r\n                    selected={selectedNoteIndex ===_index} // this is actually our loop _index in sidebar.js under <List>\r\n                    alignItems='flex-start'>\r\n                        <div \r\n                        className={classes.textSection}\r\n                        onClick={() => this.selectNote(_note,_index)}> {/* takes the note and it's index*/}\r\n                        <ListItemText\r\n                        primary={_note.title}\r\n\r\n                        // Limits string to 30 characters, adds \"...\" at end\r\n                        // Adding the helper function as in React Quill Firebase changes the string to HTML tags\r\n\r\n                        secondary={removeHTMLTags(_note.body.substring(0,30))+ '...'}>\r\n                        </ListItemText>\r\n                        </div>\r\n                            <DeleteIcon onClick={() => this.deleteNote(_note)} \r\n                            className ={classes.deleteIcon}></DeleteIcon>\r\n                </ListItem> \r\n            </div> \r\n        );\r\n    }\r\n    \r\n    selectNote=(n,i) => this.props.selectNote(n,i);\r\n    deleteNote=(note) => \r\n    {\r\n        // back ticks allows string and we can add js to that string\r\n        if(window.confirm(`Do you want to delete: ${note.title}`)){\r\n            this.props.deleteNote(note);\r\n        }\r\n    }\r\n}\r\nexport default withStyles(styles)(SidebarItemComponent);\r\n","\r\n/* \r\nTHIS DEBOUNCE FUNCTION UPDATES THE DATABASE LIVE, WITHOUT SENDING MULTIPLE REQUESTS\r\nFOR EVERY LETTER THAT IS ADDED TO THE TEXT EDITOR.\r\n\r\nDATABASE HTTP CALLS every 2-3 secs after typing\r\n\r\nmore on debounce() ? visit -> https://www.educative.io/edpresso/how-to-use-the-debounce-function-in-javascript\r\n*/\r\n\r\n    export default function debounce(a,b,c){\r\n        var d,e;\r\n        return function(){\r\n        function h(){\r\n            d=null;\r\n            c||(e=a.apply(f,g));\r\n        }\r\n        var f=this,g=arguments;\r\n        return (clearTimeout(d),d=setTimeout(h,b),c&&!d&&(e=a.apply(f,g)),e)\r\n        }\r\n    }\r\n\r\n/*\r\n\r\nTHIS removeHTMLTags FUNCTION TAKES THE HTML TEXT WHICH IS ACTUALLY CONVERTED FROM STRINGS TO\r\n HTML TAGS VIA REACT-QUILL(text editing library) changing it to Plane-Text-Preview to user.\r\n*/\r\n\r\n    export function removeHTMLTags (str) {\r\n    return str.replace(/<[^>]*>?/gm, '');\r\n    };","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\nimport List from '@material-ui/core/List';\r\nimport {Divider,Button} from '@material-ui/core';\r\nimport SidebarItemComponent from '../sidebaritems/sidebarItems';\r\n\r\n\r\nclass SidebarComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            addNote: false,\r\n            title: null\r\n        };\r\n    }\r\n    /*\r\n    Explanation of the render function:\r\n\r\n    We check if the notes!=null then we execute the if statement,\r\n    otherwise if notes==null we return an empty div.\r\n    \r\n    Now in App.js , \r\n    when it first renders the SidebarComponents\r\n    notes is going to be null as notes is null inside of the state by default.\r\n\r\n    Now when componentDidMount goes through & successfully retrieves the sidebar\r\n    and sets this.setState({notes :notes}), SidebarComponents is going to re-render\r\n    with notes not being null and then it will then comeback to render statement \r\n    here (Sidebar.js)\r\n\r\n    */\r\n    \r\n    render(){\r\n        const { notes, classes, selectedNoteIndex }=this.props;\r\n        if(notes) {\r\n            return (\r\n                <div className={classes.sidebarContainer}> \r\n                <Button \r\n                    onClick={this.newNoteBtnClick}\r\n                    className={classes.newNoteBtn}>\r\n                    {this.state.addNote ? 'Cancel' : '+ New Note'} \r\n                </Button>\r\n                {\r\n                    this.state.addNote ?\r\n                    <div>\r\n                        <input \r\n                        type='text' \r\n                        className={classes.newNoteInput}\r\n                        placeholder='Untitled'\r\n                        onKeyUp={(e)=> this.updateTitle(e.target.value)}>\r\n                        </input>\r\n                        <Button \r\n                        className={classes.newNoteSubmitBtn}\r\n                        onClick={this.newNote}>\r\n                            SUBMIT NOTE\r\n                        </Button>\r\n                    </div>\r\n                    :null\r\n                }\r\n        \r\n                {/* Takes all the notes from props and map those to actual elements */}\r\n        \r\n                <List>\r\n                    {\r\n                        notes.map((_note, _index) => {\r\n                            return (\r\n                                <div key={_index}>\r\n                                    <SidebarItemComponent\r\n                                        _note={_note}\r\n                                        _index={_index}\r\n                                        selectedNoteIndex={selectedNoteIndex}\r\n                                        selectNote={this.selectNote}\r\n                                        deleteNote={this.deleteNote}>\r\n                                    </SidebarItemComponent>\r\n                                    <Divider>\r\n                                        \r\n                                    </Divider>\r\n                                </div>\r\n                            )\r\n                        })\r\n                }\r\n                </List>\r\n                \r\n                </div>\r\n                );\r\n        } else{\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n        // End of HUGE-If statement and Explanation\r\n    }\r\n\r\n    // If newNote is true, change it to false i.e cancel & vice versa.\r\n    // The title:null makes sure that it doesn't get updated to the title of new note.\r\n\r\n    newNoteBtnClick =() => {\r\n        this.setState({title: null,addNote:!this.state.addNote}); \r\n    }\r\n    // Simply updates the title\r\n\r\n    updateTitle=(txt) => {\r\n        this.setState({title: txt})\r\n    }\r\n\r\n    // Submit btn onClick save state\r\n    newNote=()=>{\r\n      this.props.newNote(this.state.title);\r\n      this.setState({\r\n         title: null,addNote: false\r\n      });\r\n    }\r\n\r\n    // select and delete a particular node\r\n    selectNote=(n,i)=> this.props.selectNote(n,i);\r\n    deleteNote =(note)=>this.props.deleteNote(note);\r\n}\r\nexport default withStyles(styles)(SidebarComponent);","    const styles = theme => ({\r\n        root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        height: 'calc(100% - 35px)',\r\n        position: 'absolute',\r\n        left: '0',\r\n        width: '300px',\r\n        boxShadow: '0px 0px 2px black'\r\n        },\r\n        titleInput: {\r\n        height: '50px',\r\n        boxSizing: 'border-box',\r\n        border: 'none',\r\n        padding: '5px',\r\n        fontSize: '24px',\r\n        width: 'calc(100% - 300px)',\r\n        backgroundColor: '#00A82D',\r\n        color: 'white',\r\n        paddingLeft: '50px'\r\n        },\r\n        editIcon: {\r\n        position: 'absolute',\r\n        left: '310px',\r\n        top: '12px',\r\n        color: 'white',\r\n        width: '10',\r\n        height: '10'\r\n        },\r\n        editorContainer: {\r\n        height: '100%',\r\n        boxSizing: 'border-box'\r\n        }\r\n    });\r\n    \r\n    export default styles;","import React from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport debounce from '../helper'\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\n\r\nclass EditorComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            text: '',\r\n            title:'',\r\n            id:''\r\n        };\r\n    }\r\n    // Lifecycle event\r\n\r\n    // first mount sets the state of the note when the note is selected\r\n    componentDidMount=()=> {\r\n        this.setState({\r\n            text: this.props.selectedNote.body,\r\n            title: this.props.selectedNote.title,\r\n            id: this.props.selectedNote.id,\r\n        });\r\n    }\r\n\r\n    // this functions when the component is updated\r\n    componentDidUpdate=()=>{\r\n        if(this.props.selectedNote.id != this.state.id){ // if the id of the note is different to what it is displaying then {}\r\n            this.setState({\r\n                text: this.props.selectedNote.body,\r\n                title: this.props.selectedNote.title,\r\n                id: this.props.selectedNote.id,\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {classes} =this.props;\r\n        return ( \r\n\r\n            //as we update the state it will update the ReactQuill\r\n\r\n            <div className={classes.editorContainer}>\r\n                <BorderColorIcon className={classes.editIcon}></BorderColorIcon>\r\n                    <input className={classes.titleInput}\r\n                    placeholder='Untitled'\r\n                    value={this.state.title ? this.state.title: ''}\r\n                    onChange={(e)=>this.updateTitle(e.target.value)}>\r\n                    </input>\r\n\r\n            <ReactQuill\r\n            value={this.state.text}\r\n            onChange={this.updateBody}>          \r\n            </ReactQuill>\r\n            </div>\r\n            );\r\n    }\r\n\r\n    // 1. Function that updates the body\r\n\r\n    updateBody=async(val) => {\r\n        await this.setState({text:val});\r\n        this.update();\r\n    };\r\n\r\n    // 2. Updates the title\r\n\r\n    updateTitle=async(val) => {\r\n        await this.setState({title:val});\r\n        this.update();\r\n    }\r\n\r\n    // 3. calling the debounce function - helper.js\r\n\r\n    update=debounce(()=>{\r\n        this.props.noteUpdate(this.state.id,{\r\n            title: this.state.title,\r\n            body: this.state.text,\r\n        })\r\n    },2000);\r\n}\r\nexport default withStyles(styles)(EditorComponent);     // takes agrs styles, Styles is a function in which we will be using in the styles.js file","\nimport './App.css';\nimport React from 'react';\nimport \"firebase/firestore\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport SidebarComponent from './sidebar/sidebar';\nimport EditorComponent from './editor/editor';\nimport 'react-quill/dist/quill.snow.css';\n\n\n//const firebase = require('firebase');\nrequire(\"firebase/firestore\");\nclass App extends React.Component {\n  constructor(){\n    // super() will call the constructor of its parent class. \n    // This is required when you need to access some variables from the parent class.\n    super(); \n    this.state={\n      selectedNoteIndex:null,\n      selectedNote:null,\n      notes:null,\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"app__container\">\n        <SidebarComponent \n          selectedNoteIndex={this.state.selectedNoteIndex}\n          notes={this.state.notes}\n          classes={this.state.classes}\n          deleteNote={this.deleteNote}\n          selectNote={this.selectNote}\n          newNote={this.newNote}>\n        </SidebarComponent>\n        {\n          this.state.selectedNote ? // is the note is not selected render null else render the note\n          <EditorComponent \n          selectedNote={this.state.selectedNote}\n          selectedNoteIndex={this.state.selectedNoteIndex}\n          notes={this.state.notes}\n          noteUpdate={this.noteUpdate}>\n          </EditorComponent> : null\n        }\n      </div>\n    );\n  }\n\n  //Lifecycle hook: we want our App component to get called before\n  //when the component is loaded immediately \n\n  componentDidMount=() => {\n    firebase\n    .firestore()\n    .collection('notes')                    // Table in a db\n    .onSnapshot(serverUpdate=>{             // function will be automatically called when notes is updated\n      const notes = serverUpdate   \n      .docs                                 // prop of serverUpdate obj that is getting passed\n      .map(_doc => {\n        const data=_doc.data();             //grabs data from the docs\n        data['id']=_doc.id;             \n        return data;\n      });\n      console.log(notes);\n      this.setState({notes:notes});          // mapping notes state with const notes line 36\n    });\n  }\n\n  selectNote=(note,index) => this.setState({selectedNoteIndex:index, selectedNote: note});\n  noteUpdate=(id,noteObj)=> {\n    firebase\n      .firestore()\n      .collection('notes')\n      .doc(id)\n      .update({\n        title: noteObj.title,\n        body: noteObj.body,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n  }\n\n    // CREATE NEWNOTE\n\n    // updating with firebase\n    // newNote accepts title and body will be null\n  newNote= async(title) => {\n    const note={\n      title: title,\n      body: ''\n    };\n\n    /* \n    \n      await a firebase call\n      we are creating this in firebase and we are waiting for it to respond\n      from the server and whatever the response is we are saving it to \"newFromDB\"\n    \n      */\n    \n    const newFromDB= await firebase\n    .firestore()\n    .collection('notes')\n    .add({\n      title: note.title,\n      body: note.body,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n\n    // We need access to the document ID which is automatically generated by firebase\n    const newID= newFromDB.id;\n    await this.setState({\n      notes: [...this.state.notes,note] // spread Operator \"...\"\n    });\n    \n    /*\n    \n      1. Find the index of the new note \n      2. indexOf is a function of the arrayObj that finds the index of a particular item inside the array\n      3. this.state.notes.filter is iterating through the note & we are looking for the id that matches \n      const newID= newFromDB.id;\n      4. when we create a new note we want to go to the firebase, add the newNote to FB and we want it to update the\n      currently created note that we just created \n      \n    */\n    const newNoteIndex= this.state.notes.indexOf(this.state.notes.filter(_note=> _note.id===newID)[0]) \n    this.setState({\n      selectedNote: this.state.notes[newNoteIndex],selectedNoteIndex: newNoteIndex\n    });\n  }\n\n\n\n  // DELETE NOTE FUNCTION\n\n  /*\n\n  When we delete the note, we are deselecting the note in state\n  For example:\n  If we have 3 notes, we want to delete the 1st note while the 3rd note is selected,\n  and while doing so the 3rd note has 3rd index but after we delete the 1st note the \n  3rd index doesn't exist. Thus \"[this.state.selectedNoteIndex -1]\" in the else part.\n\n  */\n\n  deleteNote = async (note) =>{\n    const noteIndex = this.state.notes.indexOf(note);\n\n    await this.setState({notes:this.state.notes.filter(_note=> _note!==note)})\n    \n    if(this.state.selectedNoteIndex===noteIndex){\n      this.setState({\n        selectedNoteIndex: null,\n        selectedNote: null});\n      } \n      else {\n        this.state.notes.length > 1 ?\n        this.selectNote(\n          this.state.notes[this.state.selectedNoteIndex -1], //Current Note -1\n          this.state.selectedNoteIndex-1)\n        : this.setState(                                     //we have no more notes as length <=1\n          {\n            selectedNoteIndex: null,\n            selectedNote: null\n          }\n          );\n      }\n\n      //DELETION UPDATE IN FIREBASE\n      \n      firebase\n      .firestore()\n      .collection('notes')\n      .doc(note.id)\n      .delete();\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'firebase/app'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n//var firebase = require('firebase/app');\nrequire('firebase/firestore');\nrequire('dotenv').config();\n\nconst firebaseConfig = {\n\n    // please visit .env_Sample for API_KEY\n    apiKey: process.env.API_KEY, \n\n    authDomain: \"paperwork-ac719.firebaseapp.com\",\n    projectId: \"paperwork-ac719\",\n    storageBucket: \"paperwork-ac719.appspot.com\",\n    messagingSenderId: \"194976899556\",\n    appId: \"1:194976899556:web:417eb86a81b9dc9f3667f1\",\n    measurementId: \"G-K9XYWPXYBG\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n// React DOM takes <APP /> and renders it\n\nReactDOM.render(\n    <App />,\n  document.getElementById('paperwork container')\n);\nreportWebVitals();\n"],"sourceRoot":""}